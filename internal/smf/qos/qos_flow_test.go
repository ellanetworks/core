// Copyright 2024 Ella Networks
// SPDX-FileCopyrightText: 2021 Open Networking Foundation <info@opennetworking.org>
// SPDX-License-Identifier: Apache-2.0

package qos_test

import (
	"fmt"
	"testing"

	"github.com/ellanetworks/core/internal/models"
	"github.com/ellanetworks/core/internal/smf/qos"
)

func TestBuildAuthorizedQosFlowDescriptions(t *testing.T) {
	// make SM Policy Decision
	smPolicyDecision := &models.SmPolicyDecision{}

	// make Sm ctxt Policy Data
	smCtxtPolData := &qos.SmCtxtPolicyData{}

	smPolicyDecision.PccRules = makeSamplePccRules()
	smPolicyDecision.QosDecs = makeSampleQosData()

	smPolicyUpdates := qos.BuildSmPolicyUpdate(smCtxtPolData, smPolicyDecision)

	authorizedQosFlow := qos.BuildAuthorizedQosFlowDescriptions(smPolicyUpdates)

	fmt.Printf("Authorized QosFlow: %v\n", authorizedQosFlow.Content)
	firstQosDataId := authorizedQosFlow.Content[0]
	if firstQosDataId == 1 {
		expectedBytes := []byte{
			0x1, 0x20, 0x45, 0x1, 0x1, 0x5, 0x4, 0x3, 0x6, 0x0,
			0x65, 0x5, 0x3, 0x6, 0x0, 0xc9, 0x2, 0x3, 0x6, 0x0, 0xb, 0x3, 0x3, 0x6,
			0x0, 0x15, 0x2, 0x20, 0x45, 0x1, 0x1, 0x3, 0x4, 0x3, 0x6, 0x1, 0x2d, 0x5,
			0x3, 0x6, 0x1, 0x91, 0x2, 0x3, 0x6, 0x0, 0x1f, 0x3, 0x3, 0x6, 0x0, 0x29,
		}
		if string(expectedBytes) != string(authorizedQosFlow.Content) {
			t.Errorf("Expected: %v, got: %v", expectedBytes, authorizedQosFlow.Content)
		}
	} else if firstQosDataId == 2 {
		expectedBytes := []byte{
			0x2, 0x20, 0x45, 0x1, 0x1, 0x3, 0x4, 0x3, 0x6, 0x1,
			0x2d, 0x5, 0x3, 0x6, 0x1, 0x91, 0x2, 0x3, 0x6, 0x0, 0x1f, 0x3, 0x3, 0x6,
			0x0, 0x29, 0x1, 0x20, 0x45, 0x1, 0x1, 0x5, 0x4, 0x3, 0x6, 0x0, 0x65, 0x5,
			0x3, 0x6, 0x0, 0xc9, 0x2, 0x3, 0x6, 0x0, 0xb, 0x3, 0x3, 0x6, 0x0, 0x15,
		}
		if string(expectedBytes) != string(authorizedQosFlow.Content) {
			t.Errorf("Expected: %v, got: %v", expectedBytes, authorizedQosFlow.Content)
		}
	}
}

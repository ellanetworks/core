// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: usage_monitoring_data_scopes.sql

package sql

import (
	"context"
)

const deleteUsageMonDataScopesById = `-- name: DeleteUsageMonDataScopesById :exec
DELETE FROM usage_mon_data_scopes
WHERE usage_mon_data_id = ?
`

func (q *Queries) DeleteUsageMonDataScopesById(ctx context.Context, usageMonDataID int64) error {
	_, err := q.db.ExecContext(ctx, deleteUsageMonDataScopesById, usageMonDataID)
	return err
}

const getUsageMonDataID = `-- name: GetUsageMonDataID :one
SELECT id
FROM usage_mon_data
WHERE ue_id = ? AND limit_id = ?
`

type GetUsageMonDataIDParams struct {
	UeID    string
	LimitID string
}

func (q *Queries) GetUsageMonDataID(ctx context.Context, arg GetUsageMonDataIDParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, getUsageMonDataID, arg.UeID, arg.LimitID)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const insertUsageMonDataScope = `-- name: InsertUsageMonDataScope :exec
INSERT INTO usage_mon_data_scopes (usage_mon_data_id, snssai_sd, snssai_sst, dnn)
VALUES (?, ?, ?, ?)
`

type InsertUsageMonDataScopeParams struct {
	UsageMonDataID int64
	SnssaiSd       string
	SnssaiSst      int64
	Dnn            string
}

func (q *Queries) InsertUsageMonDataScope(ctx context.Context, arg InsertUsageMonDataScopeParams) error {
	_, err := q.db.ExecContext(ctx, insertUsageMonDataScope,
		arg.UsageMonDataID,
		arg.SnssaiSd,
		arg.SnssaiSst,
		arg.Dnn,
	)
	return err
}

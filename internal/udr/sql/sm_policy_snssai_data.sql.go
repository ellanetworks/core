// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: sm_policy_snssai_data.sql

package sql

import (
	"context"
)

const getSmPolicySnssaiDataByPolicyId = `-- name: GetSmPolicySnssaiDataByPolicyId :many
SELECT id, sm_policy_data_id, snssai_sd, snssai_sst
FROM sm_policy_snssai_data
WHERE sm_policy_data_id = ?
`

func (q *Queries) GetSmPolicySnssaiDataByPolicyId(ctx context.Context, smPolicyDataID int64) ([]SmPolicySnssaiDatum, error) {
	rows, err := q.db.QueryContext(ctx, getSmPolicySnssaiDataByPolicyId, smPolicyDataID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []SmPolicySnssaiDatum
	for rows.Next() {
		var i SmPolicySnssaiDatum
		if err := rows.Scan(
			&i.ID,
			&i.SmPolicyDataID,
			&i.SnssaiSd,
			&i.SnssaiSst,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const insertOrUpdateSmPolicySnssaiData = `-- name: InsertOrUpdateSmPolicySnssaiData :exec
INSERT INTO sm_policy_snssai_data (sm_policy_data_id, snssai_sd, snssai_sst)
VALUES (?, ?, ?)
ON CONFLICT (sm_policy_data_id, snssai_sd, snssai_sst)
DO NOTHING
`

type InsertOrUpdateSmPolicySnssaiDataParams struct {
	SmPolicyDataID int64
	SnssaiSd       string
	SnssaiSst      int64
}

func (q *Queries) InsertOrUpdateSmPolicySnssaiData(ctx context.Context, arg InsertOrUpdateSmPolicySnssaiDataParams) error {
	_, err := q.db.ExecContext(ctx, insertOrUpdateSmPolicySnssaiData, arg.SmPolicyDataID, arg.SnssaiSd, arg.SnssaiSst)
	return err
}
